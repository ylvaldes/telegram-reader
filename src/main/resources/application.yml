server:
  port: ${PORT:8020}
spring:
  datasource:
    url: ${JDBC_DATABASE_URL:jdbc:postgresql://localhost:5432/facturauy}
    username: ${JDBC_DATABASE_USERNAME:facturauser}
    password: ${JDBC_DATABASE_PASSWORD:f@ctura}
    dbcp2:
      max-wait-millis: 30000
      validation-query: SELECT 1
      validation-query-timeout: 30
  jpa:
    hibernate:
      ddl-auto: update
    open-in-view: false
    properties:
      hibernate:
        jdbc:
          lob:
            non_contextual_creation: true
        id:
          new_generator_mappings: true
springdoc:
  pathsToMatch: /api/**
  show-actuator: true

management:
  endpoint:
    health:
      show-details: always
      probes:
        enabled: true
      group:
        liveness:
          include: livenessState
        readiness:
          include: readinessState,db
  health:
    diskspace:
      enabled: false
    ping:
      enabled: false
    refresh:
      enabled: false
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,refresh,loggers,busrefresh,busenv
  info:
    git:
      enabled: true
      mode: full
    env:
      enabled: true
# used by the git plugin
info:
  project:
    name: "@project.name@"
    artifact: "@project.artifactId@"
    version: "@project.version@"
    versionCIAM: "@ciam.ciam-pom-version@"
    description: "@project.description@"
    profile: ${spring.profiles.active:default}
    organization: "@project.organization.name@"
    url: "@project.organization.url@"

logging:
  level:
    com.ylvaldes: ${LOGGING_LEVEL_ROOT:DEBUG}
app:
  output: src/output/
  task:
    enabled: ${TASK_ENABLED:false}
    expression: ${TASK_EXPRESSION_CRONT:0_0_3_*_*_?}

telegramBot:
  name: ""
  token: ""
  owner: ""